services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://crashuser:crashpass@db:5432/ascend?sslmode=disable
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET:-default-secret-change-in-production}
      - NODE_ENV=production
      - BASE_URL=${BASE_URL:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/auth/user', (res) => { process.exit(res.statusCode === 401 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ascend
      - POSTGRES_USER=crashuser
      - POSTGRES_PASSWORD=crashpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crashuser -d ascend"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: